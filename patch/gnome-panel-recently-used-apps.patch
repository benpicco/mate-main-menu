Files gnome-panel-2.12.2.pristine/gnome-panel/.panel-run-dialog.c.swp and gnome-panel-2.12.2/gnome-panel/.panel-run-dialog.c.swp differ
diff -uprN gnome-panel-2.12.2.pristine/gnome-panel/panel-run-dialog.c gnome-panel-2.12.2/gnome-panel/panel-run-dialog.c
--- gnome-panel-2.12.2.pristine/gnome-panel/panel-run-dialog.c	2005-10-22 06:08:41.000000000 -0400
+++ gnome-panel-2.12.2/gnome-panel/panel-run-dialog.c	2006-10-17 16:18:26.000000000 -0400
@@ -59,6 +59,7 @@
 #include "menu.h"
 #include "panel-lockdown.h"
 #include "panel-xutils.h"
+#include "egg-recent-model.h"
 
 #define ICON_SIZE 48.0
 
@@ -109,6 +110,8 @@ enum {
 
 static PanelRunDialog *static_dialog = NULL;
 
+static void panel_run_dialog_update_recent_apps (PanelRunDialog *dialog, const gchar *cmd);
+
 static void
 panel_run_dialog_destroy (PanelRunDialog *dialog)
 {
@@ -395,6 +398,8 @@ panel_run_dialog_execute (PanelRunDialog
 		gnome_entry_prepend_history (GNOME_ENTRY (dialog->gnome_entry),
 					     TRUE, /* save item in history */
 					     command);
+
+		panel_run_dialog_update_recent_apps (dialog, command);
 		
 		/* only close the dialog if we successfully showed or launched something */
 		gtk_widget_destroy (dialog->run_dialog);
@@ -625,6 +630,109 @@ panel_run_dialog_find_command_icon_idle 
 	return FALSE;
 }
 
+static void
+panel_run_dialog_update_recent_apps (PanelRunDialog *dialog, const gchar *cmd)
+{
+	GtkTreeIter   iter;
+	GtkTreeModel *model = NULL;
+	GtkTreePath  *path  = NULL;
+
+	gchar *found_ditem_path = NULL;
+	gchar *found_ditem_uri  = NULL;
+
+	gchar *cmd_i;
+	gchar *ditem_path_i;
+
+	gboolean fuzzy;
+
+	EggRecentModel *recent_model;
+	EggRecentItem  *recent_item;
+
+	GError *error = NULL;
+
+	
+	if (! cmd)
+		return;
+
+	model = gtk_tree_view_get_model (GTK_TREE_VIEW (dialog->program_list));
+	path  = gtk_tree_path_new_first ();
+	
+	if (! path || ! gtk_tree_model_get_iter (model, & iter, path)) {
+		if (path)
+			gtk_tree_path_free (path);
+
+		return;
+	}
+
+	do {
+		cmd_i        = NULL;
+		ditem_path_i = NULL;
+
+		gtk_tree_model_get (
+			model, & iter,
+			COLUMN_EXEC, & cmd_i,
+			COLUMN_PATH, & ditem_path_i,
+			-1
+		);
+
+        	if (cmd_i && ditem_path_i) {
+			fuzzy = FALSE;
+
+			if (fuzzy_command_match (sure_string (cmd), cmd_i, & fuzzy)) {
+				g_free (found_ditem_path);
+				
+				found_ditem_path = g_strdup (ditem_path_i);
+				
+				if (! fuzzy) {
+					/*
+					 * if not fuzzy then we have a precise
+					 * match and we can quit, else keep
+					 * searching for a better match
+					 */
+					g_free (cmd_i);
+					g_free (ditem_path_i);
+
+					break;
+				}
+			}
+		}
+
+		g_free (cmd_i);
+		g_free (ditem_path_i);
+
+	} while (gtk_tree_model_iter_next (model, & iter));
+
+	gtk_tree_path_free (path);
+
+	recent_model = egg_recent_model_new (EGG_RECENT_MODEL_SORT_NONE);
+
+	if (recent_model && found_ditem_path) {
+		found_ditem_uri = g_filename_to_uri (found_ditem_path, NULL, & error);
+
+		if (! error) {
+			recent_item = egg_recent_item_new_from_uri (found_ditem_uri);
+			egg_recent_item_add_group (recent_item, "recently-used-apps");
+			egg_recent_item_set_private (recent_item, TRUE);
+
+			egg_recent_model_add_full (recent_model, recent_item);
+		}
+		else {
+			g_warning ("unable to create uri from [%s] to insert into recent file list.\n",
+				found_ditem_path);
+
+			g_error_free (error);
+		}
+	}
+
+	g_object_unref (recent_model);
+
+	if (recent_item)
+		egg_recent_item_unref (recent_item);
+
+	g_free (found_ditem_path);
+	g_free (found_ditem_uri);
+}
+
 static gboolean
 panel_run_dialog_add_icon_idle (PanelRunDialog *dialog)
 {
