AC_INIT([gnome-main-menu], [0.9.9], [http://bugzilla.gnome.org/enter_bug.cgi?product=gnome-main-menu])

# Before making a release, the LT_VERSION string should be modified.
# The string is of the form C:R:A.
# - If interfaces have been changed or added, but binary compatibility has
#   been preserved, change to C+1:0:A+1
# - If binary compatibility has been broken (eg removed or changed interfaces)
#   change to C+1:0:0
# - If the interface is the same as the previous version, change to C:R+1:A

LT_VERSION=0:0:0
AC_SUBST(LT_VERSION)

AC_CONFIG_SRCDIR([.])
AC_CONFIG_HEADERS([config.h])

AM_INIT_AUTOMAKE([1.9 tar-ustar])
AM_MAINTAINER_MODE

AC_SUBST([ACLOCAL_AMFLAGS], ["\${ACLOCAL_FLAGS}"])

GNOME_COMPILE_WARNINGS

AC_ISC_POSIX
AC_PROG_CC
AC_STDC_HEADERS
AM_PROG_LIBTOOL

dnl ==============================================
dnl translation support
dnl ==============================================

GETTEXT_PACKAGE=gnome-main-menu
AC_SUBST(GETTEXT_PACKAGE)
AC_DEFINE_UNQUOTED(GETTEXT_PACKAGE,"$GETTEXT_PACKAGE", [Gettext package])

IT_PROG_INTLTOOL([0.35.0])
AM_GLIB_GNU_GETTEXT

dnl ==============================================
dnl Check that we meet the dependencies
dnl ==============================================
AM_PATH_GLIB_2_0(2.8.0,,,gobject)

COMMON_MODULES="glib-2.0 gobject-2.0 gtk+-2.0 gdk-2.0"

PKG_CHECK_MODULES(GLADE, libglade-2.0)
AC_SUBST(GLADE_CFLAGS)
AC_SUBST(GLADE_LIBS)

PKG_CHECK_MODULES(LIBSLAB, [ $COMMON_MODULES gnome-desktop-2.0 librsvg-2.0 libgnome-menu pango eel-2.0 ])

AC_SUBST(LIBSLAB_CFLAGS)
AC_SUBST(LIBSLAB_LIBS)

PKG_CHECK_MODULES(MAIN_MENU, [ $COMMON_MODULES libpanelapplet-2.0 gnome-desktop-2.0 gconf-2.0 libgtop-2.0 libgnome-2.0 libgnomeui-2.0 dbus-glib-1 NetworkManager hal-storage cairo ])

AC_CHECK_HEADERS(iwlib.h, [ AC_CHECK_LIB(iw, iw_sockets_open, have_iwlib=yes, have_iwlib=no)], have_iwlib=no)

if test "x$have_iwlib" != "xyes" ; then
	AC_ERROR(cannot find iwlib)
else
	MAIN_MENU_LIBS="$MAIN_MENU_LIBS -liw"
	AC_SUBST(MAIN_MENU_LIBS)
fi

AC_SUBST(MAIN_MENU_CFLAGS)
AC_SUBST(MAIN_MENU_LIBS)

PKG_CHECK_MODULES(APPLICATION_BROWSER, [ $COMMON_MODULES libpanelapplet-2.0 gnome-desktop-2.0 libgnomeui-2.0 libgnome-menu ])

AC_SUBST(APPLICATION_BROWSER_CFLAGS)
AC_SUBST(APPLICATION_BROWSER_LIBS)

dnl ==============================================
dnl How to build libslab?
dnl ==============================================

ENABLE_DYNAMIC_LIBSLAB=1
AC_ARG_ENABLE(dynamic-libslab,
 AC_HELP_STRING([--enable-dynamic-libslab], [Enable dynamic libslab]),
 [ENABLE_DYNAMIC_LIBSLAB=1])

AM_CONDITIONAL(ENABLE_DYNAMIC_LIBSLAB, test "x$ENABLE_DYNAMIC_LIBSLAB" = "x1")

dnl ==============================================
dnl End: How to build libslab?
dnl ==============================================

dnl ==============================================
dnl Gconf
dnl ==============================================

AC_PATH_PROG(GCONFTOOL, gconftool-2, no)

if test x"$GCONFTOOL" = xno; then
  AC_MSG_ERROR([gconftool-2 executable was not found in your path - should be install with gconf])
fi

AM_GCONF_SOURCE_2

dnl ==============================================
dnl End: Gconf
dnl ==============================================

dnl ==============================================
dnl Check strftime for %l and %k support
dnl ==============================================

AC_MSG_CHECKING(for %l and %k support in strftime)
AC_TRY_RUN([
#include <string.h>
#include <time.h>

int main(int argc, char **argv)
{
	char buf[10];
	time_t rawtime;
	struct tm *timeinfo;

	time(&rawtime);
	timeinfo=localtime(&rawtime);
	buf[0] = '\0';
	strftime(buf, 10, "%lx%k", timeinfo);

	if (buf[0] == '\0' || buf[0] == 'x' || strstr(buf, "l") || strstr(buf, "k"))
		exit(1);
	else
		exit(0);
}],[
AC_DEFINE(HAVE_LKSTRFTIME, 1, [strftime supports use of l and k])
ac_cv_lkstrftime=yes
],ac_cv_lkstrftime=no,ac_cv_lkstrftime=no,[
AC_DEFINE(HAVE_LKSTRFTIME, 1, [strftime supports use of l and k])
ac_cv_lkstrftime=yes
])
AC_MSG_RESULT($ac_cv_lkstrftime)

dnl ==============================================
dnl End: strftime
dnl ==============================================

dnl ==============================================
dnl Nautilus Extension
dnl ==============================================

ENABLE_PROFILER=
AC_ARG_ENABLE(nautilus-extension,
 AC_HELP_STRING([--enable-nautilus-extension], [Enable nautilus extension]),
 [ENABLE_NAUTILUS_EXTENSION=1])

if test "x$ENABLE_NAUTILUS_EXTENSION" = "x1"
then
	NAUTILUS_REQUIRED=2.6.0
	GNOME_VFS_REQUIRED=2.12.0

	PKG_CHECK_MODULES(NAUTILUS, [libnautilus-extension >= $NAUTILUS_REQUIRED glib-2.0 gobject-2.0 gconf-2.0 gnome-vfs-2.0 >= $GNOME_VFS_REQUIRED])

	AC_SUBST(NAUTILUS_CFLAGS)
	AC_SUBST(NAUTILUS_LIBS)
fi

AM_CONDITIONAL(ENABLE_NAUTILUS_EXTENSION, test "x$ENABLE_NAUTILUS_EXTENSION" = "x1")


dnl ==============================================
dnl End: Nautilus Extension
dnl ==============================================

GTK_DOC_CHECK(1.0)

AC_CONFIG_FILES([
Makefile
application-browser/etc/Makefile
application-browser/src/Makefile
libslab/Makefile
libslab/libslab.pc
main-menu/etc/Makefile
main-menu/src/Makefile
nautilus-main-menu/Makefile
patch/Makefile
po/Makefile.in
])

AC_OUTPUT
